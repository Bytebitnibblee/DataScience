# -*- coding: utf-8 -*-
"""DataScienceBCAneural.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1oy_l6hIfD2O3X1AV4On4pybfxfakUmIJ
"""

from tensorflow import keras

data = keras.datasets.imdb

(train_data, train_labels), (test_data, test_labels) = data.load_data(num_words=88000)

print(train_data[3])
print(train_labels[24999])

train_data.shape

word_index = data.get_word_index()

train_data = keras.preprocessing.sequence.pad_sequences(train_data, value =0,
                                                        padding = 'post', maxlen = 250)

test_data = keras.preprocessing.sequence.pad_sequences(test_data, value = 0, padding= 'post', maxlen = 250)

import tensorflow as tf
tf.compat.v1.reset_default_graph()

model = keras.Sequential([
    keras.layers.Embedding(88000, 16),
    keras.layers.GlobalAveragePooling1D(),
    keras.layers.Dense(16, activation = 'relu'),
    keras.layers.Dense(1, activation = 'sigmoid')
])

model.compile(optimizer = 'adam', loss= 'binary_crossentropy', metrics = ['accuracy'])

model.fit(train_data, train_labels, epochs = 10)

test_loss, test_acc = model.evaluate(test_data, test_labels)

predict = model.predict(test_data)

def review_encode(s):
    encoded = []
    for word in s:
        if word.lower() in word_index:
            encoded.append(word_index[word.lower()])
        else:
            encoded.append(88001)  # Unknown word index
    return encoded

nline = input('Enter your review about the movie: ')
line = nline.replace(',', '').replace('?', '').strip().split()
encode = review_encode(line)
encoded = keras.preprocessing.sequence.pad_sequences([encode], value=0, padding='post')

predict = model.predict(encoded)

if predict[0][0] > 0.5:
    print('Positive Review')
else:
    print('Negative Review')

print('hello guys?'.replace('?', '#'))
print('hello guys'.split())
print('    hello    '.strip())

